plugins {
	id 'java'
	id 'org.springframework.boot' version '3.5.5'
	id 'io.spring.dependency-management' version '1.1.7'
	id 'org.ec4j.editorconfig' version '0.1.0'
}

group = 'cz.rohlik'
version = '0.0.1-SNAPSHOT'
description = 'Commerce API - Product & Order Management System'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(21)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	// Spring Boot Starters
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springframework.boot:spring-boot-devtools'
	
	// Scheduling for order expiration
	implementation 'org.springframework.boot:spring-boot-starter-aop'
	
	// API Documentation
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.6.0'
	
	// Database
	runtimeOnly 'com.h2database:h2'
	
	// Database Migration
	implementation 'org.flywaydb:flyway-core'
	
	// Development tools - no Lombok for modern Java
	annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
	
	// Testing
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

// EditorConfig configuration
editorconfig {
	// Include all source files
	includes = ['**/*.java', '**/*.xml', '**/*.yml', '**/*.yaml', '**/*.properties', '**/*.sql', '**/*.md']
	// Exclude generated and build files
	excludes = ['**/build/**', '**/target/**', '**/.gradle/**', '**/*.class']
}

// Make check task depend on editorconfigCheck
tasks.named('check') {
	dependsOn 'editorconfigCheck'
}

tasks.named('test') {
	useJUnitPlatform()
}
